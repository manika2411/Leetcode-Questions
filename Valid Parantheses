//https://leetcode.com/problems/valid-parentheses/description/
//20. Valid Parentheses
#include <stack>
#include <unordered_map>

class Solution {
public:
    bool isValid(string s) 
    {
        stack<char> st;
        unordered_map<char, char> bracketPairs = 
        {
            {')', '('},
            {'}', '{'},
            {']', '['}
        };
        for (char c : s) 
        {
            if (bracketPairs.find(c) != bracketPairs.end()) 
            {
                if (st.empty() || st.top() != bracketPairs[c]) 
                {
                    return false;
                }
                st.pop();
            } 
            else 
            {
                st.push(c);
            }
        }
        return st.empty();
    }
};
